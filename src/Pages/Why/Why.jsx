import React from 'react';
import { motion } from 'framer-motion';

import FeatureCard from './FeatureCard';
import CourseCardLimit from './CourseCardLimit';

const Why = () => {
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.15,
        delayChildren: 0.3,
      },
    },
  };

  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: {
        duration: 0.5,
        ease: 'easeOut',
      },
    },
  };

  return (
    <div className="min-h-screen bg-gradient-to-br  py-12 px-4 overflow-hidden">
      {/* Main Container - Glassmorphism Card */}
      <motion.div
        className="relative max-w-7xl mx-auto rounded-3xl border border-white/30 bg-base-100 backdrop-blur-sm shadow-xl overflow-hidden"
        initial={{ scale: 0.95, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{ duration: 0.8, ease: 'easeOut' }}
      >
        {/* Decorative corner accents */}
        <div className="absolute top-0 left-0 w-32 h-32 bg-gradient-to-br from-blue-400 to-purple-500 opacity-10 rounded-br-full"></div>
        <div className="absolute bottom-0 right-0 w-40 h-40 bg-gradient-to-tl from-pink-400 to-amber-400 opacity-10 rounded-tl-full"></div>

        <div className="p-6 md:p-10 lg:p-12 relative z-10">
          {/* Header */}
          <motion.div
            className="text-center mb-14"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
          >
            <h1 className="text-3xl md:text-4xl lg:text-5xl font-extrabold text-base-400 mb-5 font-sans tracking-tight">
              ‡¶ï‡ßá‡¶® ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ LMS ‡¶¨‡ßá‡¶õ‡ßá ‡¶®‡¶ø‡¶¨‡ßá‡¶®?
            </h1>
            <p className="text-base-600 text-base md:text-lg max-w-3xl mx-auto leading-relaxed font-sans">
              ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶∏‡¶æ‡¶∞‡¶ø‡¶∞ ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶≤‡¶æ‡¶∞‡ßç‡¶®‡¶ø‡¶Ç ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü‡¶´‡¶∞‡ßç‡¶Æ ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶ø ‡¶™‡¶æ‡¶¨‡ßá‡¶® ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶∏‡ßç‡¶§ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶ì ‡¶¶‡¶ï‡ßç‡¶∑‡¶§‡¶æ ‡¶â‡¶®‡ßç‡¶®‡¶Ø‡¶º‡¶®‡ßá‡¶∞ ‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶§‡ßç‡¶§‡¶Æ ‡¶∏‡ßÅ‡¶Ø‡ßã‡¶ó
            </p>
          </motion.div>

          {/* Feature Cards Grid */}
          <motion.div
            className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-5 mb-16"
            variants={containerVariants}
            initial="hidden"
            animate="visible"
          >
            {[
              { icon: 'üéì', title: '‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï', desc: '‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û ‡¶ì ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ø‡¶§ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï‡¶¶‡ßá‡¶∞ ‡¶ï‡¶æ‡¶õ ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø ‡¶∂‡¶ø‡¶ñ‡ßÅ‡¶®' },
              { icon: 'üì±', title: '‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶´‡ßç‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶≤‡¶ø', desc: '‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶°‡¶ø‡¶≠‡¶æ‡¶á‡¶∏‡ßá ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶∂‡¶ø‡¶ñ‡ßÅ‡¶®, ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶®‡ßá‡¶ü ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ó ‡¶•‡¶æ‡¶ï‡¶≤‡ßá‡¶á ‡¶π‡¶≤‡ßã' },
              { icon: 'üíº', title: '‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü', desc: '‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶®‡ßá ‡¶ú‡¶¨ ‡¶™‡ßç‡¶≤‡ßá‡¶∏‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ ‡¶ì ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ó‡¶æ‡¶á‡¶°‡¶≤‡¶æ‡¶á‡¶®' },
              { icon: '‚ö°', title: '‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶∂‡¶ø‡¶ñ‡ßÅ‡¶®', desc: '‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶ø‡¶≠ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶ì ‡¶≤‡¶æ‡¶á‡¶≠ ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶∂‡¶ø‡¶ñ‡ßÅ‡¶®' },
              { icon: 'üõ†Ô∏è', title: '‡¶™‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ü‡¶ø‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤ ‡¶ï‡ßã‡¶∞‡ßç‡¶∏', desc: '‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï ‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶Ø‡¶æ ‡¶¨‡¶æ‡¶∏‡ßç‡¶§‡¶¨ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá‡¶∞ ‡¶¶‡¶ï‡ßç‡¶∑‡¶§‡¶æ ‡¶â‡¶®‡ßç‡¶®‡¶§ ‡¶ï‡¶∞‡ßá' },
              { icon: 'üë•', title: '‡¶ï‡¶Æ‡¶ø‡¶â‡¶®‡¶ø‡¶ü‡¶ø', desc: '‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶ì ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶®‡ßá‡¶ü‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶ï ‡¶ó‡¶°‡¶º‡ßá ‡¶§‡ßÅ‡¶≤‡ßÅ‡¶®' },
            ].map((feature, i) => (
              <motion.div key={i} variants={itemVariants}>
                <FeatureCard
                  icon={feature.icon}
                  title={feature.title}
                  description={feature.desc}
                />
              </motion.div>
            ))}
          </motion.div>

          {/* Popular Courses */}
          <motion.div
            className="mb-16"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.7 }}
          >
            <h2 className="text-2xl md:text-3xl font-bold text-base-400 text-center mb-8 font-sans">
              ‡¶ú‡¶®‡¶™‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡¶∏‡¶Æ‡ßÇ‡¶π
            </h2>
            <div>
             <CourseCardLimit></CourseCardLimit>
            </div>
          </motion.div>

          {/* Stats */}
          {/* <motion.div
            className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-16"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.9 }}
          >
            <StatsCard number="50K+" label="‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ" />
            <StatsCard number="200+" label="‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï" />
            <StatsCard number="500+" label="‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶∏‡¶Æ‡ßÇ‡¶π" />
            <StatsCard number="95%" label="‡¶∏‡¶æ‡¶´‡¶≤‡ßç‡¶Ø‡ßá‡¶∞ ‡¶π‡¶æ‡¶∞" />
          </motion.div> */}

          {/* Instructors */}
          {/* <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 1.1 }}
          >
            <h2 className="text-2xl md:text-3xl font-bold text-base-400 text-center mb-8 font-sans">
              ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï‡¶¨‡ßÉ‡¶®‡ßç‡¶¶
            </h2>
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
              <InstructorCard></InstructorCard>
            </div>
          </motion.div> */}

          {/* CTA Button */}
          <motion.div
            className="text-center mt-12"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 1.3 }}
          >
            {/* <motion.button
              className="px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-bold text-lg rounded-full shadow-lg hover:shadow-xl transition-all duration-300"
              whileHover={{ scale: 1.03, boxShadow: '0 10px 25px -5px rgba(99, 102, 241, 0.5)' }}
              whileTap={{ scale: 0.98 }}
            >
              üöÄ ‡¶¨‡¶ø‡¶®‡¶æ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡ßá ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®
            </motion.button> */}
          </motion.div>
        </div>
      </motion.div>
    </div>
  );
};

export default Why;